// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "merlion/maker/v1/genesis.proto" (package "merlion.maker.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * GenesisState defines the maker module's genesis state.
 *
 * @generated from protobuf message merlion.maker.v1.GenesisState
 */
export interface GenesisState {
    /**
     * @generated from protobuf field: merlion.maker.v1.Params params = 1;
     */
    params?: Params;
    /**
     * @generated from protobuf field: string backing_ratio = 2;
     */
    backingRatio: string;
}
/**
 * Params defines the parameters for the maker module.
 *
 * @generated from protobuf message merlion.maker.v1.Params
 */
export interface Params {
    /**
     * step of adjusting backing ratio
     *
     * @generated from protobuf field: string backing_ratio_step = 1;
     */
    backingRatioStep: string;
    /**
     * price band for adjusting backing ratio
     *
     * @generated from protobuf field: string backing_ratio_price_band = 2;
     */
    backingRatioPriceBand: string;
    /**
     * cooldown period for adjusting backing ratio
     *
     * @generated from protobuf field: int64 backing_ratio_cooldown_period = 3;
     */
    backingRatioCooldownPeriod: string;
    /**
     * mint Mer price bias ratio
     *
     * @generated from protobuf field: string mint_price_bias = 4;
     */
    mintPriceBias: string;
    /**
     * burn Mer price bias ratio
     *
     * @generated from protobuf field: string burn_price_bias = 5;
     */
    burnPriceBias: string;
    /**
     * reback bonus ratio
     *
     * @generated from protobuf field: string reback_bonus = 6;
     */
    rebackBonus: string;
    /**
     * liquidation commission fee ratio
     *
     * @generated from protobuf field: string liquidation_commission_fee = 7;
     */
    liquidationCommissionFee: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class GenesisState$Type extends MessageType<GenesisState> {
    constructor() {
        super("merlion.maker.v1.GenesisState", [
            { no: 1, name: "params", kind: "message", T: () => Params, options: { "gogoproto.nullable": false } },
            { no: 2, name: "backing_ratio", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"backing_ratio\"" } }
        ]);
    }
    create(value?: PartialMessage<GenesisState>): GenesisState {
        const message = { backingRatio: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenesisState>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenesisState): GenesisState {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* merlion.maker.v1.Params params */ 1:
                    message.params = Params.internalBinaryRead(reader, reader.uint32(), options, message.params);
                    break;
                case /* string backing_ratio */ 2:
                    message.backingRatio = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenesisState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* merlion.maker.v1.Params params = 1; */
        if (message.params)
            Params.internalBinaryWrite(message.params, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string backing_ratio = 2; */
        if (message.backingRatio !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.backingRatio);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message merlion.maker.v1.GenesisState
 */
export const GenesisState = new GenesisState$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Params$Type extends MessageType<Params> {
    constructor() {
        super("merlion.maker.v1.Params", [
            { no: 1, name: "backing_ratio_step", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"backing_ratio_step\"" } },
            { no: 2, name: "backing_ratio_price_band", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"backing_ratio_price_band\"" } },
            { no: 3, name: "backing_ratio_cooldown_period", kind: "scalar", T: 3 /*ScalarType.INT64*/, options: { "gogoproto.moretags": "yaml:\"backing_ratio_cooldown_period\"" } },
            { no: 4, name: "mint_price_bias", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"mint_price_bias\"" } },
            { no: 5, name: "burn_price_bias", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"burn_price_bias\"" } },
            { no: 6, name: "reback_bonus", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"reback_bonus\"" } },
            { no: 7, name: "liquidation_commission_fee", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"liquidation_commission_fee\"" } }
        ], { "gogoproto.goproto_stringer": false, "gogoproto.equal": true });
    }
    create(value?: PartialMessage<Params>): Params {
        const message = { backingRatioStep: "", backingRatioPriceBand: "", backingRatioCooldownPeriod: "0", mintPriceBias: "", burnPriceBias: "", rebackBonus: "", liquidationCommissionFee: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Params>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Params): Params {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string backing_ratio_step */ 1:
                    message.backingRatioStep = reader.string();
                    break;
                case /* string backing_ratio_price_band */ 2:
                    message.backingRatioPriceBand = reader.string();
                    break;
                case /* int64 backing_ratio_cooldown_period */ 3:
                    message.backingRatioCooldownPeriod = reader.int64().toString();
                    break;
                case /* string mint_price_bias */ 4:
                    message.mintPriceBias = reader.string();
                    break;
                case /* string burn_price_bias */ 5:
                    message.burnPriceBias = reader.string();
                    break;
                case /* string reback_bonus */ 6:
                    message.rebackBonus = reader.string();
                    break;
                case /* string liquidation_commission_fee */ 7:
                    message.liquidationCommissionFee = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Params, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string backing_ratio_step = 1; */
        if (message.backingRatioStep !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.backingRatioStep);
        /* string backing_ratio_price_band = 2; */
        if (message.backingRatioPriceBand !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.backingRatioPriceBand);
        /* int64 backing_ratio_cooldown_period = 3; */
        if (message.backingRatioCooldownPeriod !== "0")
            writer.tag(3, WireType.Varint).int64(message.backingRatioCooldownPeriod);
        /* string mint_price_bias = 4; */
        if (message.mintPriceBias !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.mintPriceBias);
        /* string burn_price_bias = 5; */
        if (message.burnPriceBias !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.burnPriceBias);
        /* string reback_bonus = 6; */
        if (message.rebackBonus !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.rebackBonus);
        /* string liquidation_commission_fee = 7; */
        if (message.liquidationCommissionFee !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.liquidationCommissionFee);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message merlion.maker.v1.Params
 */
export const Params = new Params$Type();
