// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "ibc/core/types/v1/genesis.proto" (package "ibc.core.types.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GenesisState as GenesisState$3 } from "../../channel/v1/genesis";
import { GenesisState as GenesisState$2 } from "../../connection/v1/genesis";
import { GenesisState as GenesisState$ } from "../../client/v1/genesis";
/**
 * GenesisState defines the ibc module's genesis state.
 *
 * @generated from protobuf message ibc.core.types.v1.GenesisState
 */
export interface GenesisState {
    /**
     * ICS002 - Clients genesis state
     *
     * @generated from protobuf field: ibc.core.client.v1.GenesisState client_genesis = 1;
     */
    clientGenesis?: GenesisState$;
    /**
     * ICS003 - Connections genesis state
     *
     * @generated from protobuf field: ibc.core.connection.v1.GenesisState connection_genesis = 2;
     */
    connectionGenesis?: GenesisState$2;
    /**
     * ICS004 - Channel genesis state
     *
     * @generated from protobuf field: ibc.core.channel.v1.GenesisState channel_genesis = 3;
     */
    channelGenesis?: GenesisState$3;
}
// @generated message type with reflection information, may provide speed optimized methods
class GenesisState$Type extends MessageType<GenesisState> {
    constructor() {
        super("ibc.core.types.v1.GenesisState", [
            { no: 1, name: "client_genesis", kind: "message", T: () => GenesisState$, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"client_genesis\"" } },
            { no: 2, name: "connection_genesis", kind: "message", T: () => GenesisState$2, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"connection_genesis\"" } },
            { no: 3, name: "channel_genesis", kind: "message", T: () => GenesisState$3, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"channel_genesis\"" } }
        ]);
    }
    create(value?: PartialMessage<GenesisState>): GenesisState {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenesisState>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenesisState): GenesisState {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ibc.core.client.v1.GenesisState client_genesis */ 1:
                    message.clientGenesis = GenesisState$.internalBinaryRead(reader, reader.uint32(), options, message.clientGenesis);
                    break;
                case /* ibc.core.connection.v1.GenesisState connection_genesis */ 2:
                    message.connectionGenesis = GenesisState$2.internalBinaryRead(reader, reader.uint32(), options, message.connectionGenesis);
                    break;
                case /* ibc.core.channel.v1.GenesisState channel_genesis */ 3:
                    message.channelGenesis = GenesisState$3.internalBinaryRead(reader, reader.uint32(), options, message.channelGenesis);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenesisState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ibc.core.client.v1.GenesisState client_genesis = 1; */
        if (message.clientGenesis)
            GenesisState$.internalBinaryWrite(message.clientGenesis, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* ibc.core.connection.v1.GenesisState connection_genesis = 2; */
        if (message.connectionGenesis)
            GenesisState$2.internalBinaryWrite(message.connectionGenesis, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* ibc.core.channel.v1.GenesisState channel_genesis = 3; */
        if (message.channelGenesis)
            GenesisState$3.internalBinaryWrite(message.channelGenesis, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ibc.core.types.v1.GenesisState
 */
export const GenesisState = new GenesisState$Type();
