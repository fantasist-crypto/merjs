// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "ibc/core/connection/v1/tx.proto" (package "ibc.core.connection.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Msg } from "./tx";
import type { MsgConnectionOpenConfirmResponse } from "./tx";
import type { MsgConnectionOpenConfirm } from "./tx";
import type { MsgConnectionOpenAckResponse } from "./tx";
import type { MsgConnectionOpenAck } from "./tx";
import type { MsgConnectionOpenTryResponse } from "./tx";
import type { MsgConnectionOpenTry } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { MsgConnectionOpenInitResponse } from "./tx";
import type { MsgConnectionOpenInit } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the ibc/connection Msg service.
 *
 * @generated from protobuf service ibc.core.connection.v1.Msg
 */
export interface IMsgClient {
    /**
     * ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
     *
     * @generated from protobuf rpc: ConnectionOpenInit(ibc.core.connection.v1.MsgConnectionOpenInit) returns (ibc.core.connection.v1.MsgConnectionOpenInitResponse);
     */
    connectionOpenInit(input: MsgConnectionOpenInit, options?: RpcOptions): UnaryCall<MsgConnectionOpenInit, MsgConnectionOpenInitResponse>;
    /**
     * ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
     *
     * @generated from protobuf rpc: ConnectionOpenTry(ibc.core.connection.v1.MsgConnectionOpenTry) returns (ibc.core.connection.v1.MsgConnectionOpenTryResponse);
     */
    connectionOpenTry(input: MsgConnectionOpenTry, options?: RpcOptions): UnaryCall<MsgConnectionOpenTry, MsgConnectionOpenTryResponse>;
    /**
     * ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
     *
     * @generated from protobuf rpc: ConnectionOpenAck(ibc.core.connection.v1.MsgConnectionOpenAck) returns (ibc.core.connection.v1.MsgConnectionOpenAckResponse);
     */
    connectionOpenAck(input: MsgConnectionOpenAck, options?: RpcOptions): UnaryCall<MsgConnectionOpenAck, MsgConnectionOpenAckResponse>;
    /**
     * ConnectionOpenConfirm defines a rpc handler method for
     * MsgConnectionOpenConfirm.
     *
     * @generated from protobuf rpc: ConnectionOpenConfirm(ibc.core.connection.v1.MsgConnectionOpenConfirm) returns (ibc.core.connection.v1.MsgConnectionOpenConfirmResponse);
     */
    connectionOpenConfirm(input: MsgConnectionOpenConfirm, options?: RpcOptions): UnaryCall<MsgConnectionOpenConfirm, MsgConnectionOpenConfirmResponse>;
}
/**
 * Msg defines the ibc/connection Msg service.
 *
 * @generated from protobuf service ibc.core.connection.v1.Msg
 */
export class MsgClient implements IMsgClient, ServiceInfo {
    typeName = Msg.typeName;
    methods = Msg.methods;
    options = Msg.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * ConnectionOpenInit defines a rpc handler method for MsgConnectionOpenInit.
     *
     * @generated from protobuf rpc: ConnectionOpenInit(ibc.core.connection.v1.MsgConnectionOpenInit) returns (ibc.core.connection.v1.MsgConnectionOpenInitResponse);
     */
    connectionOpenInit(input: MsgConnectionOpenInit, options?: RpcOptions): UnaryCall<MsgConnectionOpenInit, MsgConnectionOpenInitResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgConnectionOpenInit, MsgConnectionOpenInitResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * ConnectionOpenTry defines a rpc handler method for MsgConnectionOpenTry.
     *
     * @generated from protobuf rpc: ConnectionOpenTry(ibc.core.connection.v1.MsgConnectionOpenTry) returns (ibc.core.connection.v1.MsgConnectionOpenTryResponse);
     */
    connectionOpenTry(input: MsgConnectionOpenTry, options?: RpcOptions): UnaryCall<MsgConnectionOpenTry, MsgConnectionOpenTryResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgConnectionOpenTry, MsgConnectionOpenTryResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * ConnectionOpenAck defines a rpc handler method for MsgConnectionOpenAck.
     *
     * @generated from protobuf rpc: ConnectionOpenAck(ibc.core.connection.v1.MsgConnectionOpenAck) returns (ibc.core.connection.v1.MsgConnectionOpenAckResponse);
     */
    connectionOpenAck(input: MsgConnectionOpenAck, options?: RpcOptions): UnaryCall<MsgConnectionOpenAck, MsgConnectionOpenAckResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgConnectionOpenAck, MsgConnectionOpenAckResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * ConnectionOpenConfirm defines a rpc handler method for
     * MsgConnectionOpenConfirm.
     *
     * @generated from protobuf rpc: ConnectionOpenConfirm(ibc.core.connection.v1.MsgConnectionOpenConfirm) returns (ibc.core.connection.v1.MsgConnectionOpenConfirmResponse);
     */
    connectionOpenConfirm(input: MsgConnectionOpenConfirm, options?: RpcOptions): UnaryCall<MsgConnectionOpenConfirm, MsgConnectionOpenConfirmResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<MsgConnectionOpenConfirm, MsgConnectionOpenConfirmResponse>("unary", this._transport, method, opt, input);
    }
}
