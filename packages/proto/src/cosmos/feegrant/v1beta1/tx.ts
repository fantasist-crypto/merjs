// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/feegrant/v1beta1/tx.proto" (package "cosmos.feegrant.v1beta1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
/**
 * MsgGrantAllowance adds permission for Grantee to spend up to Allowance
 * of fees from the account of Granter.
 *
 * @generated from protobuf message cosmos.feegrant.v1beta1.MsgGrantAllowance
 */
export interface MsgGrantAllowance {
    /**
     * granter is the address of the user granting an allowance of their funds.
     *
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * grantee is the address of the user being granted an allowance of another user's funds.
     *
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
    /**
     * allowance can be any of basic and filtered fee allowance.
     *
     * @generated from protobuf field: google.protobuf.Any allowance = 3;
     */
    allowance?: Any;
}
/**
 * MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type.
 *
 * @generated from protobuf message cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse
 */
export interface MsgGrantAllowanceResponse {
}
/**
 * MsgRevokeAllowance removes any existing Allowance from Granter to Grantee.
 *
 * @generated from protobuf message cosmos.feegrant.v1beta1.MsgRevokeAllowance
 */
export interface MsgRevokeAllowance {
    /**
     * granter is the address of the user granting an allowance of their funds.
     *
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * grantee is the address of the user being granted an allowance of another user's funds.
     *
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
}
/**
 * MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse response type.
 *
 * @generated from protobuf message cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse
 */
export interface MsgRevokeAllowanceResponse {
}
// @generated message type with reflection information, may provide speed optimized methods
class MsgGrantAllowance$Type extends MessageType<MsgGrantAllowance> {
    constructor() {
        super("cosmos.feegrant.v1beta1.MsgGrantAllowance", [
            { no: 1, name: "granter", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "grantee", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "allowance", kind: "message", T: () => Any, options: { "cosmos_proto.accepts_interface": "FeeAllowanceI" } }
        ]);
    }
    create(value?: PartialMessage<MsgGrantAllowance>): MsgGrantAllowance {
        const message = { granter: "", grantee: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgGrantAllowance>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgGrantAllowance): MsgGrantAllowance {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string granter */ 1:
                    message.granter = reader.string();
                    break;
                case /* string grantee */ 2:
                    message.grantee = reader.string();
                    break;
                case /* google.protobuf.Any allowance */ 3:
                    message.allowance = Any.internalBinaryRead(reader, reader.uint32(), options, message.allowance);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgGrantAllowance, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string granter = 1; */
        if (message.granter !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.granter);
        /* string grantee = 2; */
        if (message.grantee !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.grantee);
        /* google.protobuf.Any allowance = 3; */
        if (message.allowance)
            Any.internalBinaryWrite(message.allowance, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.feegrant.v1beta1.MsgGrantAllowance
 */
export const MsgGrantAllowance = new MsgGrantAllowance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgGrantAllowanceResponse$Type extends MessageType<MsgGrantAllowanceResponse> {
    constructor() {
        super("cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse", []);
    }
    create(value?: PartialMessage<MsgGrantAllowanceResponse>): MsgGrantAllowanceResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgGrantAllowanceResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgGrantAllowanceResponse): MsgGrantAllowanceResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MsgGrantAllowanceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse
 */
export const MsgGrantAllowanceResponse = new MsgGrantAllowanceResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgRevokeAllowance$Type extends MessageType<MsgRevokeAllowance> {
    constructor() {
        super("cosmos.feegrant.v1beta1.MsgRevokeAllowance", [
            { no: 1, name: "granter", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "grantee", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<MsgRevokeAllowance>): MsgRevokeAllowance {
        const message = { granter: "", grantee: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgRevokeAllowance>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgRevokeAllowance): MsgRevokeAllowance {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string granter */ 1:
                    message.granter = reader.string();
                    break;
                case /* string grantee */ 2:
                    message.grantee = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgRevokeAllowance, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string granter = 1; */
        if (message.granter !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.granter);
        /* string grantee = 2; */
        if (message.grantee !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.grantee);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.feegrant.v1beta1.MsgRevokeAllowance
 */
export const MsgRevokeAllowance = new MsgRevokeAllowance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgRevokeAllowanceResponse$Type extends MessageType<MsgRevokeAllowanceResponse> {
    constructor() {
        super("cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse", []);
    }
    create(value?: PartialMessage<MsgRevokeAllowanceResponse>): MsgRevokeAllowanceResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgRevokeAllowanceResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgRevokeAllowanceResponse): MsgRevokeAllowanceResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MsgRevokeAllowanceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse
 */
export const MsgRevokeAllowanceResponse = new MsgRevokeAllowanceResponse$Type();
/**
 * @generated ServiceType for protobuf service cosmos.feegrant.v1beta1.Msg
 */
export const Msg = new ServiceType("cosmos.feegrant.v1beta1.Msg", [
    { name: "GrantAllowance", options: {}, I: MsgGrantAllowance, O: MsgGrantAllowanceResponse },
    { name: "RevokeAllowance", options: {}, I: MsgRevokeAllowance, O: MsgRevokeAllowanceResponse }
]);
