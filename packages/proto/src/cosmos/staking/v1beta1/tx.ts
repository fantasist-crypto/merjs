// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/staking/v1beta1/tx.proto" (package "cosmos.staking.v1beta1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../../google/protobuf/timestamp";
import { Coin } from "../../base/v1beta1/coin";
import { Any } from "../../../google/protobuf/any";
import { CommissionRates } from "./staking";
import { Description } from "./staking";
/**
 * MsgCreateValidator defines a SDK message for creating a new validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgCreateValidator
 */
export interface MsgCreateValidator {
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.Description description = 1;
     */
    description?: Description;
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.CommissionRates commission = 2;
     */
    commission?: CommissionRates;
    /**
     * @generated from protobuf field: string min_self_delegation = 3;
     */
    minSelfDelegation: string;
    /**
     * @generated from protobuf field: string delegator_address = 4;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 5;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: google.protobuf.Any pubkey = 6;
     */
    pubkey?: Any;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin value = 7;
     */
    value?: Coin;
}
/**
 * MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export interface MsgCreateValidatorResponse {
}
/**
 * MsgEditValidator defines a SDK message for editing an existing validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgEditValidator
 */
export interface MsgEditValidator {
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.Description description = 1;
     */
    description?: Description;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * We pass a reference to the new commission rate and min self delegation as
     * it's not mandatory to update. If not updated, the deserialized rate will be
     * zero with no way to distinguish if an update was intended.
     * REF: #2373
     *
     * @generated from protobuf field: string commission_rate = 3;
     */
    commissionRate: string;
    /**
     * @generated from protobuf field: string min_self_delegation = 4;
     */
    minSelfDelegation: string;
}
/**
 * MsgEditValidatorResponse defines the Msg/EditValidator response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export interface MsgEditValidatorResponse {
}
/**
 * MsgDelegate defines a SDK message for performing a delegation of coins
 * from a delegator to a validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgDelegate
 */
export interface MsgDelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 3;
     */
    amount?: Coin;
}
/**
 * MsgDelegateResponse defines the Msg/Delegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export interface MsgDelegateResponse {
}
/**
 * MsgBeginRedelegate defines a SDK message for performing a redelegation
 * of coins from a delegator and source validator to a destination validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export interface MsgBeginRedelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_src_address = 2;
     */
    validatorSrcAddress: string;
    /**
     * @generated from protobuf field: string validator_dst_address = 3;
     */
    validatorDstAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 4;
     */
    amount?: Coin;
}
/**
 * MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export interface MsgBeginRedelegateResponse {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp completion_time = 1;
     */
    completionTime?: Timestamp;
}
/**
 * MsgUndelegate defines a SDK message for performing an undelegation from a
 * delegate and a validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgUndelegate
 */
export interface MsgUndelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 3;
     */
    amount?: Coin;
}
/**
 * MsgUndelegateResponse defines the Msg/Undelegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export interface MsgUndelegateResponse {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp completion_time = 1;
     */
    completionTime?: Timestamp;
}
// @generated message type with reflection information, may provide speed optimized methods
class MsgCreateValidator$Type extends MessageType<MsgCreateValidator> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgCreateValidator", [
            { no: 1, name: "description", kind: "message", T: () => Description, options: { "gogoproto.nullable": false } },
            { no: 2, name: "commission", kind: "message", T: () => CommissionRates, options: { "gogoproto.nullable": false } },
            { no: 3, name: "min_self_delegation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Int", "gogoproto.moretags": "yaml:\"min_self_delegation\"" } },
            { no: 4, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"delegator_address\"" } },
            { no: 5, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"validator_address\"" } },
            { no: 6, name: "pubkey", kind: "message", T: () => Any, options: { "cosmos_proto.accepts_interface": "cosmos.crypto.PubKey" } },
            { no: 7, name: "value", kind: "message", T: () => Coin, options: { "gogoproto.nullable": false } }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<MsgCreateValidator>): MsgCreateValidator {
        const message = { minSelfDelegation: "", delegatorAddress: "", validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgCreateValidator>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgCreateValidator): MsgCreateValidator {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Description description */ 1:
                    message.description = Description.internalBinaryRead(reader, reader.uint32(), options, message.description);
                    break;
                case /* cosmos.staking.v1beta1.CommissionRates commission */ 2:
                    message.commission = CommissionRates.internalBinaryRead(reader, reader.uint32(), options, message.commission);
                    break;
                case /* string min_self_delegation */ 3:
                    message.minSelfDelegation = reader.string();
                    break;
                case /* string delegator_address */ 4:
                    message.delegatorAddress = reader.string();
                    break;
                case /* string validator_address */ 5:
                    message.validatorAddress = reader.string();
                    break;
                case /* google.protobuf.Any pubkey */ 6:
                    message.pubkey = Any.internalBinaryRead(reader, reader.uint32(), options, message.pubkey);
                    break;
                case /* cosmos.base.v1beta1.Coin value */ 7:
                    message.value = Coin.internalBinaryRead(reader, reader.uint32(), options, message.value);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgCreateValidator, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Description description = 1; */
        if (message.description)
            Description.internalBinaryWrite(message.description, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.staking.v1beta1.CommissionRates commission = 2; */
        if (message.commission)
            CommissionRates.internalBinaryWrite(message.commission, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string min_self_delegation = 3; */
        if (message.minSelfDelegation !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.minSelfDelegation);
        /* string delegator_address = 4; */
        if (message.delegatorAddress !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.delegatorAddress);
        /* string validator_address = 5; */
        if (message.validatorAddress !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.validatorAddress);
        /* google.protobuf.Any pubkey = 6; */
        if (message.pubkey)
            Any.internalBinaryWrite(message.pubkey, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.v1beta1.Coin value = 7; */
        if (message.value)
            Coin.internalBinaryWrite(message.value, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgCreateValidator
 */
export const MsgCreateValidator = new MsgCreateValidator$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgCreateValidatorResponse$Type extends MessageType<MsgCreateValidatorResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgCreateValidatorResponse", []);
    }
    create(value?: PartialMessage<MsgCreateValidatorResponse>): MsgCreateValidatorResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgCreateValidatorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgCreateValidatorResponse): MsgCreateValidatorResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MsgCreateValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export const MsgCreateValidatorResponse = new MsgCreateValidatorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgEditValidator$Type extends MessageType<MsgEditValidator> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgEditValidator", [
            { no: 1, name: "description", kind: "message", T: () => Description, options: { "gogoproto.nullable": false } },
            { no: 2, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"address\"" } },
            { no: 3, name: "commission_rate", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Dec", "gogoproto.moretags": "yaml:\"commission_rate\"" } },
            { no: 4, name: "min_self_delegation", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Int", "gogoproto.moretags": "yaml:\"min_self_delegation\"" } }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<MsgEditValidator>): MsgEditValidator {
        const message = { validatorAddress: "", commissionRate: "", minSelfDelegation: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgEditValidator>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgEditValidator): MsgEditValidator {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Description description */ 1:
                    message.description = Description.internalBinaryRead(reader, reader.uint32(), options, message.description);
                    break;
                case /* string validator_address */ 2:
                    message.validatorAddress = reader.string();
                    break;
                case /* string commission_rate */ 3:
                    message.commissionRate = reader.string();
                    break;
                case /* string min_self_delegation */ 4:
                    message.minSelfDelegation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgEditValidator, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Description description = 1; */
        if (message.description)
            Description.internalBinaryWrite(message.description, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string validator_address = 2; */
        if (message.validatorAddress !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddress);
        /* string commission_rate = 3; */
        if (message.commissionRate !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.commissionRate);
        /* string min_self_delegation = 4; */
        if (message.minSelfDelegation !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.minSelfDelegation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgEditValidator
 */
export const MsgEditValidator = new MsgEditValidator$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgEditValidatorResponse$Type extends MessageType<MsgEditValidatorResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgEditValidatorResponse", []);
    }
    create(value?: PartialMessage<MsgEditValidatorResponse>): MsgEditValidatorResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgEditValidatorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgEditValidatorResponse): MsgEditValidatorResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MsgEditValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export const MsgEditValidatorResponse = new MsgEditValidatorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgDelegate$Type extends MessageType<MsgDelegate> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgDelegate", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"delegator_address\"" } },
            { no: 2, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"validator_address\"" } },
            { no: 3, name: "amount", kind: "message", T: () => Coin, options: { "gogoproto.nullable": false } }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<MsgDelegate>): MsgDelegate {
        const message = { delegatorAddress: "", validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgDelegate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgDelegate): MsgDelegate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                case /* string validator_address */ 2:
                    message.validatorAddress = reader.string();
                    break;
                case /* cosmos.base.v1beta1.Coin amount */ 3:
                    message.amount = Coin.internalBinaryRead(reader, reader.uint32(), options, message.amount);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgDelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        /* string validator_address = 2; */
        if (message.validatorAddress !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddress);
        /* cosmos.base.v1beta1.Coin amount = 3; */
        if (message.amount)
            Coin.internalBinaryWrite(message.amount, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgDelegate
 */
export const MsgDelegate = new MsgDelegate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgDelegateResponse$Type extends MessageType<MsgDelegateResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgDelegateResponse", []);
    }
    create(value?: PartialMessage<MsgDelegateResponse>): MsgDelegateResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgDelegateResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgDelegateResponse): MsgDelegateResponse {
        return target ?? this.create();
    }
    internalBinaryWrite(message: MsgDelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export const MsgDelegateResponse = new MsgDelegateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgBeginRedelegate$Type extends MessageType<MsgBeginRedelegate> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgBeginRedelegate", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"delegator_address\"" } },
            { no: 2, name: "validator_src_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"validator_src_address\"" } },
            { no: 3, name: "validator_dst_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"validator_dst_address\"" } },
            { no: 4, name: "amount", kind: "message", T: () => Coin, options: { "gogoproto.nullable": false } }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<MsgBeginRedelegate>): MsgBeginRedelegate {
        const message = { delegatorAddress: "", validatorSrcAddress: "", validatorDstAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgBeginRedelegate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgBeginRedelegate): MsgBeginRedelegate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                case /* string validator_src_address */ 2:
                    message.validatorSrcAddress = reader.string();
                    break;
                case /* string validator_dst_address */ 3:
                    message.validatorDstAddress = reader.string();
                    break;
                case /* cosmos.base.v1beta1.Coin amount */ 4:
                    message.amount = Coin.internalBinaryRead(reader, reader.uint32(), options, message.amount);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgBeginRedelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        /* string validator_src_address = 2; */
        if (message.validatorSrcAddress !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorSrcAddress);
        /* string validator_dst_address = 3; */
        if (message.validatorDstAddress !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.validatorDstAddress);
        /* cosmos.base.v1beta1.Coin amount = 4; */
        if (message.amount)
            Coin.internalBinaryWrite(message.amount, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export const MsgBeginRedelegate = new MsgBeginRedelegate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgBeginRedelegateResponse$Type extends MessageType<MsgBeginRedelegateResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgBeginRedelegateResponse", [
            { no: 1, name: "completion_time", kind: "message", T: () => Timestamp, options: { "gogoproto.nullable": false, "gogoproto.stdtime": true } }
        ]);
    }
    create(value?: PartialMessage<MsgBeginRedelegateResponse>): MsgBeginRedelegateResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgBeginRedelegateResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgBeginRedelegateResponse): MsgBeginRedelegateResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp completion_time */ 1:
                    message.completionTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.completionTime);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgBeginRedelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp completion_time = 1; */
        if (message.completionTime)
            Timestamp.internalBinaryWrite(message.completionTime, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export const MsgBeginRedelegateResponse = new MsgBeginRedelegateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgUndelegate$Type extends MessageType<MsgUndelegate> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgUndelegate", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"delegator_address\"" } },
            { no: 2, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/, options: { "gogoproto.moretags": "yaml:\"validator_address\"" } },
            { no: 3, name: "amount", kind: "message", T: () => Coin, options: { "gogoproto.nullable": false } }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<MsgUndelegate>): MsgUndelegate {
        const message = { delegatorAddress: "", validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgUndelegate>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUndelegate): MsgUndelegate {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                case /* string validator_address */ 2:
                    message.validatorAddress = reader.string();
                    break;
                case /* cosmos.base.v1beta1.Coin amount */ 3:
                    message.amount = Coin.internalBinaryRead(reader, reader.uint32(), options, message.amount);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgUndelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        /* string validator_address = 2; */
        if (message.validatorAddress !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddress);
        /* cosmos.base.v1beta1.Coin amount = 3; */
        if (message.amount)
            Coin.internalBinaryWrite(message.amount, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgUndelegate
 */
export const MsgUndelegate = new MsgUndelegate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgUndelegateResponse$Type extends MessageType<MsgUndelegateResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.MsgUndelegateResponse", [
            { no: 1, name: "completion_time", kind: "message", T: () => Timestamp, options: { "gogoproto.nullable": false, "gogoproto.stdtime": true } }
        ]);
    }
    create(value?: PartialMessage<MsgUndelegateResponse>): MsgUndelegateResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MsgUndelegateResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUndelegateResponse): MsgUndelegateResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Timestamp completion_time */ 1:
                    message.completionTime = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.completionTime);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MsgUndelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* google.protobuf.Timestamp completion_time = 1; */
        if (message.completionTime)
            Timestamp.internalBinaryWrite(message.completionTime, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export const MsgUndelegateResponse = new MsgUndelegateResponse$Type();
/**
 * @generated ServiceType for protobuf service cosmos.staking.v1beta1.Msg
 */
export const Msg = new ServiceType("cosmos.staking.v1beta1.Msg", [
    { name: "CreateValidator", options: {}, I: MsgCreateValidator, O: MsgCreateValidatorResponse },
    { name: "EditValidator", options: {}, I: MsgEditValidator, O: MsgEditValidatorResponse },
    { name: "Delegate", options: {}, I: MsgDelegate, O: MsgDelegateResponse },
    { name: "BeginRedelegate", options: {}, I: MsgBeginRedelegate, O: MsgBeginRedelegateResponse },
    { name: "Undelegate", options: {}, I: MsgUndelegate, O: MsgUndelegateResponse }
]);
