// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/staking/v1beta1/query.proto" (package "cosmos.staking.v1beta1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./staking";
import { Pool } from "./staking";
import { HistoricalInfo } from "./staking";
import { RedelegationResponse } from "./staking";
import { UnbondingDelegation } from "./staking";
import { DelegationResponse } from "./staking";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { Validator } from "./staking";
import { PageRequest } from "../../base/query/v1beta1/pagination";
/**
 * QueryValidatorsRequest is request type for Query/Validators RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorsRequest
 */
export interface QueryValidatorsRequest {
    /**
     * status enables to query for validators matching a given status.
     *
     * @generated from protobuf field: string status = 1;
     */
    status: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryValidatorsResponse is response type for the Query/Validators RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorsResponse
 */
export interface QueryValidatorsResponse {
    /**
     * validators contains all the queried validators.
     *
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.Validator validators = 1;
     */
    validators: Validator[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryValidatorRequest is response type for the Query/Validator RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorRequest
 */
export interface QueryValidatorRequest {
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 1;
     */
    validatorAddr: string;
}
/**
 * QueryValidatorResponse is response type for the Query/Validator RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorResponse
 */
export interface QueryValidatorResponse {
    /**
     * validator defines the the validator info.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.Validator validator = 1;
     */
    validator?: Validator;
}
/**
 * QueryValidatorDelegationsRequest is request type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorDelegationsRequest
 */
export interface QueryValidatorDelegationsRequest {
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 1;
     */
    validatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryValidatorDelegationsResponse is response type for the
 * Query/ValidatorDelegations RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorDelegationsResponse
 */
export interface QueryValidatorDelegationsResponse {
    /**
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
     */
    delegationResponses: DelegationResponse[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryValidatorUnbondingDelegationsRequest is required type for the
 * Query/ValidatorUnbondingDelegations RPC method
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest
 */
export interface QueryValidatorUnbondingDelegationsRequest {
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 1;
     */
    validatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryValidatorUnbondingDelegationsResponse is response type for the
 * Query/ValidatorUnbondingDelegations RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse
 */
export interface QueryValidatorUnbondingDelegationsResponse {
    /**
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
     */
    unbondingResponses: UnbondingDelegation[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDelegationRequest is request type for the Query/Delegation RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegationRequest
 */
export interface QueryDelegationRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 2;
     */
    validatorAddr: string;
}
/**
 * QueryDelegationResponse is response type for the Query/Delegation RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegationResponse
 */
export interface QueryDelegationResponse {
    /**
     * delegation_responses defines the delegation info of a delegation.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.DelegationResponse delegation_response = 1;
     */
    delegationResponse?: DelegationResponse;
}
/**
 * QueryUnbondingDelegationRequest is request type for the
 * Query/UnbondingDelegation RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryUnbondingDelegationRequest
 */
export interface QueryUnbondingDelegationRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 2;
     */
    validatorAddr: string;
}
/**
 * QueryDelegationResponse is response type for the Query/UnbondingDelegation
 * RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryUnbondingDelegationResponse
 */
export interface QueryUnbondingDelegationResponse {
    /**
     * unbond defines the unbonding information of a delegation.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.UnbondingDelegation unbond = 1;
     */
    unbond?: UnbondingDelegation;
}
/**
 * QueryDelegatorDelegationsRequest is request type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest
 */
export interface QueryDelegatorDelegationsRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryDelegatorDelegationsResponse is response type for the
 * Query/DelegatorDelegations RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse
 */
export interface QueryDelegatorDelegationsResponse {
    /**
     * delegation_responses defines all the delegations' info of a delegator.
     *
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1;
     */
    delegationResponses: DelegationResponse[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDelegatorUnbondingDelegationsRequest is request type for the
 * Query/DelegatorUnbondingDelegations RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest
 */
export interface QueryDelegatorUnbondingDelegationsRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryUnbondingDelegatorDelegationsResponse is response type for the
 * Query/UnbondingDelegatorDelegations RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse
 */
export interface QueryDelegatorUnbondingDelegationsResponse {
    /**
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1;
     */
    unbondingResponses: UnbondingDelegation[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryRedelegationsRequest is request type for the Query/Redelegations RPC
 * method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryRedelegationsRequest
 */
export interface QueryRedelegationsRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * src_validator_addr defines the validator address to redelegate from.
     *
     * @generated from protobuf field: string src_validator_addr = 2;
     */
    srcValidatorAddr: string;
    /**
     * dst_validator_addr defines the validator address to redelegate to.
     *
     * @generated from protobuf field: string dst_validator_addr = 3;
     */
    dstValidatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
     */
    pagination?: PageRequest;
}
/**
 * QueryRedelegationsResponse is response type for the Query/Redelegations RPC
 * method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryRedelegationsResponse
 */
export interface QueryRedelegationsResponse {
    /**
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1;
     */
    redelegationResponses: RedelegationResponse[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDelegatorValidatorsRequest is request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest
 */
export interface QueryDelegatorValidatorsRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryDelegatorValidatorsResponse is response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse
 */
export interface QueryDelegatorValidatorsResponse {
    /**
     * validators defines the the validators' info of a delegator.
     *
     * @generated from protobuf field: repeated cosmos.staking.v1beta1.Validator validators = 1;
     */
    validators: Validator[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDelegatorValidatorRequest is request type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorRequest
 */
export interface QueryDelegatorValidatorRequest {
    /**
     * delegator_addr defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_addr = 1;
     */
    delegatorAddr: string;
    /**
     * validator_addr defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_addr = 2;
     */
    validatorAddr: string;
}
/**
 * QueryDelegatorValidatorResponse response type for the
 * Query/DelegatorValidator RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorResponse
 */
export interface QueryDelegatorValidatorResponse {
    /**
     * validator defines the the validator info.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.Validator validator = 1;
     */
    validator?: Validator;
}
/**
 * QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryHistoricalInfoRequest
 */
export interface QueryHistoricalInfoRequest {
    /**
     * height defines at which height to query the historical info.
     *
     * @generated from protobuf field: int64 height = 1;
     */
    height: string;
}
/**
 * QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
 * method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryHistoricalInfoResponse
 */
export interface QueryHistoricalInfoResponse {
    /**
     * hist defines the historical info at the given height.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.HistoricalInfo hist = 1;
     */
    hist?: HistoricalInfo;
}
/**
 * QueryPoolRequest is request type for the Query/Pool RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryPoolRequest
 */
export interface QueryPoolRequest {
}
/**
 * QueryPoolResponse is response type for the Query/Pool RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryPoolResponse
 */
export interface QueryPoolResponse {
    /**
     * pool defines the pool info.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.Pool pool = 1;
     */
    pool?: Pool;
}
/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * params holds all the parameters of this module.
     *
     * @generated from protobuf field: cosmos.staking.v1beta1.Params params = 1;
     */
    params?: Params;
}
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorsRequest$Type extends MessageType<QueryValidatorsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorsRequest", [
            { no: 1, name: "status", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorsRequest>): QueryValidatorsRequest {
        const message = { status: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorsRequest): QueryValidatorsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string status */ 1:
                    message.status = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string status = 1; */
        if (message.status !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.status);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorsRequest
 */
export const QueryValidatorsRequest = new QueryValidatorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorsResponse$Type extends MessageType<QueryValidatorsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorsResponse", [
            { no: 1, name: "validators", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Validator, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorsResponse>): QueryValidatorsResponse {
        const message = { validators: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorsResponse): QueryValidatorsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.Validator validators */ 1:
                    message.validators.push(Validator.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.Validator validators = 1; */
        for (let i = 0; i < message.validators.length; i++)
            Validator.internalBinaryWrite(message.validators[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorsResponse
 */
export const QueryValidatorsResponse = new QueryValidatorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorRequest$Type extends MessageType<QueryValidatorRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorRequest", [
            { no: 1, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorRequest>): QueryValidatorRequest {
        const message = { validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorRequest): QueryValidatorRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_addr */ 1:
                    message.validatorAddr = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_addr = 1; */
        if (message.validatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddr);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorRequest
 */
export const QueryValidatorRequest = new QueryValidatorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorResponse$Type extends MessageType<QueryValidatorResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorResponse", [
            { no: 1, name: "validator", kind: "message", T: () => Validator, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorResponse>): QueryValidatorResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorResponse): QueryValidatorResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Validator validator */ 1:
                    message.validator = Validator.internalBinaryRead(reader, reader.uint32(), options, message.validator);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Validator validator = 1; */
        if (message.validator)
            Validator.internalBinaryWrite(message.validator, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorResponse
 */
export const QueryValidatorResponse = new QueryValidatorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorDelegationsRequest$Type extends MessageType<QueryValidatorDelegationsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorDelegationsRequest", [
            { no: 1, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorDelegationsRequest>): QueryValidatorDelegationsRequest {
        const message = { validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorDelegationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorDelegationsRequest): QueryValidatorDelegationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_addr */ 1:
                    message.validatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorDelegationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_addr = 1; */
        if (message.validatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorDelegationsRequest
 */
export const QueryValidatorDelegationsRequest = new QueryValidatorDelegationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorDelegationsResponse$Type extends MessageType<QueryValidatorDelegationsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorDelegationsResponse", [
            { no: 1, name: "delegation_responses", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DelegationResponse, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "DelegationResponses" } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorDelegationsResponse>): QueryValidatorDelegationsResponse {
        const message = { delegationResponses: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorDelegationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorDelegationsResponse): QueryValidatorDelegationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses */ 1:
                    message.delegationResponses.push(DelegationResponse.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorDelegationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1; */
        for (let i = 0; i < message.delegationResponses.length; i++)
            DelegationResponse.internalBinaryWrite(message.delegationResponses[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorDelegationsResponse
 */
export const QueryValidatorDelegationsResponse = new QueryValidatorDelegationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorUnbondingDelegationsRequest$Type extends MessageType<QueryValidatorUnbondingDelegationsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest", [
            { no: 1, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorUnbondingDelegationsRequest>): QueryValidatorUnbondingDelegationsRequest {
        const message = { validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorUnbondingDelegationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorUnbondingDelegationsRequest): QueryValidatorUnbondingDelegationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_addr */ 1:
                    message.validatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorUnbondingDelegationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_addr = 1; */
        if (message.validatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest
 */
export const QueryValidatorUnbondingDelegationsRequest = new QueryValidatorUnbondingDelegationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorUnbondingDelegationsResponse$Type extends MessageType<QueryValidatorUnbondingDelegationsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse", [
            { no: 1, name: "unbonding_responses", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UnbondingDelegation, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorUnbondingDelegationsResponse>): QueryValidatorUnbondingDelegationsResponse {
        const message = { unbondingResponses: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorUnbondingDelegationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorUnbondingDelegationsResponse): QueryValidatorUnbondingDelegationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses */ 1:
                    message.unbondingResponses.push(UnbondingDelegation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorUnbondingDelegationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1; */
        for (let i = 0; i < message.unbondingResponses.length; i++)
            UnbondingDelegation.internalBinaryWrite(message.unbondingResponses[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse
 */
export const QueryValidatorUnbondingDelegationsResponse = new QueryValidatorUnbondingDelegationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationRequest$Type extends MessageType<QueryDelegationRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegationRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegationRequest>): QueryDelegationRequest {
        const message = { delegatorAddr: "", validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationRequest): QueryDelegationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* string validator_addr */ 2:
                    message.validatorAddr = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* string validator_addr = 2; */
        if (message.validatorAddr !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddr);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegationRequest
 */
export const QueryDelegationRequest = new QueryDelegationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationResponse$Type extends MessageType<QueryDelegationResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegationResponse", [
            { no: 1, name: "delegation_response", kind: "message", T: () => DelegationResponse }
        ]);
    }
    create(value?: PartialMessage<QueryDelegationResponse>): QueryDelegationResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationResponse): QueryDelegationResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.DelegationResponse delegation_response */ 1:
                    message.delegationResponse = DelegationResponse.internalBinaryRead(reader, reader.uint32(), options, message.delegationResponse);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.DelegationResponse delegation_response = 1; */
        if (message.delegationResponse)
            DelegationResponse.internalBinaryWrite(message.delegationResponse, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegationResponse
 */
export const QueryDelegationResponse = new QueryDelegationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryUnbondingDelegationRequest$Type extends MessageType<QueryUnbondingDelegationRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryUnbondingDelegationRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryUnbondingDelegationRequest>): QueryUnbondingDelegationRequest {
        const message = { delegatorAddr: "", validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryUnbondingDelegationRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUnbondingDelegationRequest): QueryUnbondingDelegationRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* string validator_addr */ 2:
                    message.validatorAddr = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryUnbondingDelegationRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* string validator_addr = 2; */
        if (message.validatorAddr !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddr);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryUnbondingDelegationRequest
 */
export const QueryUnbondingDelegationRequest = new QueryUnbondingDelegationRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryUnbondingDelegationResponse$Type extends MessageType<QueryUnbondingDelegationResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryUnbondingDelegationResponse", [
            { no: 1, name: "unbond", kind: "message", T: () => UnbondingDelegation, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryUnbondingDelegationResponse>): QueryUnbondingDelegationResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryUnbondingDelegationResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUnbondingDelegationResponse): QueryUnbondingDelegationResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.UnbondingDelegation unbond */ 1:
                    message.unbond = UnbondingDelegation.internalBinaryRead(reader, reader.uint32(), options, message.unbond);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryUnbondingDelegationResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.UnbondingDelegation unbond = 1; */
        if (message.unbond)
            UnbondingDelegation.internalBinaryWrite(message.unbond, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryUnbondingDelegationResponse
 */
export const QueryUnbondingDelegationResponse = new QueryUnbondingDelegationResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorDelegationsRequest$Type extends MessageType<QueryDelegatorDelegationsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorDelegationsRequest>): QueryDelegatorDelegationsRequest {
        const message = { delegatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorDelegationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorDelegationsRequest): QueryDelegatorDelegationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorDelegationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest
 */
export const QueryDelegatorDelegationsRequest = new QueryDelegatorDelegationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorDelegationsResponse$Type extends MessageType<QueryDelegatorDelegationsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse", [
            { no: 1, name: "delegation_responses", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DelegationResponse, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryDelegatorDelegationsResponse>): QueryDelegatorDelegationsResponse {
        const message = { delegationResponses: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorDelegationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorDelegationsResponse): QueryDelegatorDelegationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses */ 1:
                    message.delegationResponses.push(DelegationResponse.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorDelegationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1; */
        for (let i = 0; i < message.delegationResponses.length; i++)
            DelegationResponse.internalBinaryWrite(message.delegationResponses[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse
 */
export const QueryDelegatorDelegationsResponse = new QueryDelegatorDelegationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorUnbondingDelegationsRequest$Type extends MessageType<QueryDelegatorUnbondingDelegationsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorUnbondingDelegationsRequest>): QueryDelegatorUnbondingDelegationsRequest {
        const message = { delegatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorUnbondingDelegationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorUnbondingDelegationsRequest): QueryDelegatorUnbondingDelegationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorUnbondingDelegationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest
 */
export const QueryDelegatorUnbondingDelegationsRequest = new QueryDelegatorUnbondingDelegationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorUnbondingDelegationsResponse$Type extends MessageType<QueryDelegatorUnbondingDelegationsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse", [
            { no: 1, name: "unbonding_responses", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UnbondingDelegation, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryDelegatorUnbondingDelegationsResponse>): QueryDelegatorUnbondingDelegationsResponse {
        const message = { unbondingResponses: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorUnbondingDelegationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorUnbondingDelegationsResponse): QueryDelegatorUnbondingDelegationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses */ 1:
                    message.unbondingResponses.push(UnbondingDelegation.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorUnbondingDelegationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1; */
        for (let i = 0; i < message.unbondingResponses.length; i++)
            UnbondingDelegation.internalBinaryWrite(message.unbondingResponses[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse
 */
export const QueryDelegatorUnbondingDelegationsResponse = new QueryDelegatorUnbondingDelegationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryRedelegationsRequest$Type extends MessageType<QueryRedelegationsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryRedelegationsRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "src_validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "dst_validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "pagination", kind: "message", T: () => PageRequest }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryRedelegationsRequest>): QueryRedelegationsRequest {
        const message = { delegatorAddr: "", srcValidatorAddr: "", dstValidatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryRedelegationsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryRedelegationsRequest): QueryRedelegationsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* string src_validator_addr */ 2:
                    message.srcValidatorAddr = reader.string();
                    break;
                case /* string dst_validator_addr */ 3:
                    message.dstValidatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 4:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryRedelegationsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* string src_validator_addr = 2; */
        if (message.srcValidatorAddr !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.srcValidatorAddr);
        /* string dst_validator_addr = 3; */
        if (message.dstValidatorAddr !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.dstValidatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 4; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryRedelegationsRequest
 */
export const QueryRedelegationsRequest = new QueryRedelegationsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryRedelegationsResponse$Type extends MessageType<QueryRedelegationsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryRedelegationsResponse", [
            { no: 1, name: "redelegation_responses", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RedelegationResponse, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryRedelegationsResponse>): QueryRedelegationsResponse {
        const message = { redelegationResponses: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryRedelegationsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryRedelegationsResponse): QueryRedelegationsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses */ 1:
                    message.redelegationResponses.push(RedelegationResponse.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryRedelegationsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1; */
        for (let i = 0; i < message.redelegationResponses.length; i++)
            RedelegationResponse.internalBinaryWrite(message.redelegationResponses[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryRedelegationsResponse
 */
export const QueryRedelegationsResponse = new QueryRedelegationsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorsRequest$Type extends MessageType<QueryDelegatorValidatorsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pagination", kind: "message", T: () => PageRequest }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorValidatorsRequest>): QueryDelegatorValidatorsRequest {
        const message = { delegatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorsRequest): QueryDelegatorValidatorsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 2:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 2; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest
 */
export const QueryDelegatorValidatorsRequest = new QueryDelegatorValidatorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorsResponse$Type extends MessageType<QueryDelegatorValidatorsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse", [
            { no: 1, name: "validators", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Validator, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryDelegatorValidatorsResponse>): QueryDelegatorValidatorsResponse {
        const message = { validators: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorsResponse): QueryDelegatorValidatorsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.staking.v1beta1.Validator validators */ 1:
                    message.validators.push(Validator.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.staking.v1beta1.Validator validators = 1; */
        for (let i = 0; i < message.validators.length; i++)
            Validator.internalBinaryWrite(message.validators[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse
 */
export const QueryDelegatorValidatorsResponse = new QueryDelegatorValidatorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorRequest$Type extends MessageType<QueryDelegatorValidatorRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorValidatorRequest", [
            { no: 1, name: "delegator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "validator_addr", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorValidatorRequest>): QueryDelegatorValidatorRequest {
        const message = { delegatorAddr: "", validatorAddr: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorRequest): QueryDelegatorValidatorRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_addr */ 1:
                    message.delegatorAddr = reader.string();
                    break;
                case /* string validator_addr */ 2:
                    message.validatorAddr = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_addr = 1; */
        if (message.delegatorAddr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddr);
        /* string validator_addr = 2; */
        if (message.validatorAddr !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddr);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorRequest
 */
export const QueryDelegatorValidatorRequest = new QueryDelegatorValidatorRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorResponse$Type extends MessageType<QueryDelegatorValidatorResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryDelegatorValidatorResponse", [
            { no: 1, name: "validator", kind: "message", T: () => Validator, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryDelegatorValidatorResponse>): QueryDelegatorValidatorResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorResponse): QueryDelegatorValidatorResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Validator validator */ 1:
                    message.validator = Validator.internalBinaryRead(reader, reader.uint32(), options, message.validator);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Validator validator = 1; */
        if (message.validator)
            Validator.internalBinaryWrite(message.validator, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryDelegatorValidatorResponse
 */
export const QueryDelegatorValidatorResponse = new QueryDelegatorValidatorResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryHistoricalInfoRequest$Type extends MessageType<QueryHistoricalInfoRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryHistoricalInfoRequest", [
            { no: 1, name: "height", kind: "scalar", T: 3 /*ScalarType.INT64*/ }
        ]);
    }
    create(value?: PartialMessage<QueryHistoricalInfoRequest>): QueryHistoricalInfoRequest {
        const message = { height: "0" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryHistoricalInfoRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryHistoricalInfoRequest): QueryHistoricalInfoRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 height */ 1:
                    message.height = reader.int64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryHistoricalInfoRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 height = 1; */
        if (message.height !== "0")
            writer.tag(1, WireType.Varint).int64(message.height);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryHistoricalInfoRequest
 */
export const QueryHistoricalInfoRequest = new QueryHistoricalInfoRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryHistoricalInfoResponse$Type extends MessageType<QueryHistoricalInfoResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryHistoricalInfoResponse", [
            { no: 1, name: "hist", kind: "message", T: () => HistoricalInfo }
        ]);
    }
    create(value?: PartialMessage<QueryHistoricalInfoResponse>): QueryHistoricalInfoResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryHistoricalInfoResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryHistoricalInfoResponse): QueryHistoricalInfoResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.HistoricalInfo hist */ 1:
                    message.hist = HistoricalInfo.internalBinaryRead(reader, reader.uint32(), options, message.hist);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryHistoricalInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.HistoricalInfo hist = 1; */
        if (message.hist)
            HistoricalInfo.internalBinaryWrite(message.hist, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryHistoricalInfoResponse
 */
export const QueryHistoricalInfoResponse = new QueryHistoricalInfoResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryPoolRequest$Type extends MessageType<QueryPoolRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryPoolRequest", []);
    }
    create(value?: PartialMessage<QueryPoolRequest>): QueryPoolRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryPoolRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryPoolRequest): QueryPoolRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: QueryPoolRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryPoolRequest
 */
export const QueryPoolRequest = new QueryPoolRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryPoolResponse$Type extends MessageType<QueryPoolResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryPoolResponse", [
            { no: 1, name: "pool", kind: "message", T: () => Pool, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryPoolResponse>): QueryPoolResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryPoolResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryPoolResponse): QueryPoolResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Pool pool */ 1:
                    message.pool = Pool.internalBinaryRead(reader, reader.uint32(), options, message.pool);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryPoolResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Pool pool = 1; */
        if (message.pool)
            Pool.internalBinaryWrite(message.pool, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryPoolResponse
 */
export const QueryPoolResponse = new QueryPoolResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryParamsRequest", []);
    }
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryParamsRequest
 */
export const QueryParamsRequest = new QueryParamsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor() {
        super("cosmos.staking.v1beta1.QueryParamsResponse", [
            { no: 1, name: "params", kind: "message", T: () => Params, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.staking.v1beta1.Params params */ 1:
                    message.params = Params.internalBinaryRead(reader, reader.uint32(), options, message.params);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.staking.v1beta1.Params params = 1; */
        if (message.params)
            Params.internalBinaryWrite(message.params, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.QueryParamsResponse
 */
export const QueryParamsResponse = new QueryParamsResponse$Type();
/**
 * @generated ServiceType for protobuf service cosmos.staking.v1beta1.Query
 */
export const Query = new ServiceType("cosmos.staking.v1beta1.Query", [
    { name: "Validators", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators" } }, I: QueryValidatorsRequest, O: QueryValidatorsResponse },
    { name: "Validator", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators/{validator_addr}" } }, I: QueryValidatorRequest, O: QueryValidatorResponse },
    { name: "ValidatorDelegations", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations" } }, I: QueryValidatorDelegationsRequest, O: QueryValidatorDelegationsResponse },
    { name: "ValidatorUnbondingDelegations", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations" } }, I: QueryValidatorUnbondingDelegationsRequest, O: QueryValidatorUnbondingDelegationsResponse },
    { name: "Delegation", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}" } }, I: QueryDelegationRequest, O: QueryDelegationResponse },
    { name: "UnbondingDelegation", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation" } }, I: QueryUnbondingDelegationRequest, O: QueryUnbondingDelegationResponse },
    { name: "DelegatorDelegations", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/delegations/{delegator_addr}" } }, I: QueryDelegatorDelegationsRequest, O: QueryDelegatorDelegationsResponse },
    { name: "DelegatorUnbondingDelegations", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations" } }, I: QueryDelegatorUnbondingDelegationsRequest, O: QueryDelegatorUnbondingDelegationsResponse },
    { name: "Redelegations", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations" } }, I: QueryRedelegationsRequest, O: QueryRedelegationsResponse },
    { name: "DelegatorValidators", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators" } }, I: QueryDelegatorValidatorsRequest, O: QueryDelegatorValidatorsResponse },
    { name: "DelegatorValidator", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}" } }, I: QueryDelegatorValidatorRequest, O: QueryDelegatorValidatorResponse },
    { name: "HistoricalInfo", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/historical_info/{height}" } }, I: QueryHistoricalInfoRequest, O: QueryHistoricalInfoResponse },
    { name: "Pool", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/pool" } }, I: QueryPoolRequest, O: QueryPoolResponse },
    { name: "Params", options: { "google.api.http": { get: "/cosmos/staking/v1beta1/params" } }, I: QueryParamsRequest, O: QueryParamsResponse }
]);
