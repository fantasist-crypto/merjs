// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/distribution/v1beta1/query.proto" (package "cosmos.distribution.v1beta1", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { DelegationDelegatorReward } from "./distribution";
import { DecCoin } from "../../base/v1beta1/coin";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { ValidatorSlashEvent } from "./distribution";
import { PageRequest } from "../../base/query/v1beta1/pagination";
import { ValidatorAccumulatedCommission } from "./distribution";
import { ValidatorOutstandingRewards } from "./distribution";
import { Params } from "./distribution";
/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * params defines the parameters of the module.
     *
     * @generated from protobuf field: cosmos.distribution.v1beta1.Params params = 1;
     */
    params?: Params;
}
/**
 * QueryValidatorOutstandingRewardsRequest is the request type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest
 */
export interface QueryValidatorOutstandingRewardsRequest {
    /**
     * validator_address defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_address = 1;
     */
    validatorAddress: string;
}
/**
 * QueryValidatorOutstandingRewardsResponse is the response type for the
 * Query/ValidatorOutstandingRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse
 */
export interface QueryValidatorOutstandingRewardsResponse {
    /**
     * @generated from protobuf field: cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1;
     */
    rewards?: ValidatorOutstandingRewards;
}
/**
 * QueryValidatorCommissionRequest is the request type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest
 */
export interface QueryValidatorCommissionRequest {
    /**
     * validator_address defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_address = 1;
     */
    validatorAddress: string;
}
/**
 * QueryValidatorCommissionResponse is the response type for the
 * Query/ValidatorCommission RPC method
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse
 */
export interface QueryValidatorCommissionResponse {
    /**
     * commission defines the commision the validator received.
     *
     * @generated from protobuf field: cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1;
     */
    commission?: ValidatorAccumulatedCommission;
}
/**
 * QueryValidatorSlashesRequest is the request type for the
 * Query/ValidatorSlashes RPC method
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest
 */
export interface QueryValidatorSlashesRequest {
    /**
     * validator_address defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_address = 1;
     */
    validatorAddress: string;
    /**
     * starting_height defines the optional starting height to query the slashes.
     *
     * @generated from protobuf field: uint64 starting_height = 2;
     */
    startingHeight: string;
    /**
     * starting_height defines the optional ending height to query the slashes.
     *
     * @generated from protobuf field: uint64 ending_height = 3;
     */
    endingHeight: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
     */
    pagination?: PageRequest;
}
/**
 * QueryValidatorSlashesResponse is the response type for the
 * Query/ValidatorSlashes RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse
 */
export interface QueryValidatorSlashesResponse {
    /**
     * slashes defines the slashes the validator received.
     *
     * @generated from protobuf field: repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1;
     */
    slashes: ValidatorSlashEvent[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDelegationRewardsRequest is the request type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest
 */
export interface QueryDelegationRewardsRequest {
    /**
     * delegator_address defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * validator_address defines the validator address to query for.
     *
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
}
/**
 * QueryDelegationRewardsResponse is the response type for the
 * Query/DelegationRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse
 */
export interface QueryDelegationRewardsResponse {
    /**
     * rewards defines the rewards accrued by a delegation.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.DecCoin rewards = 1;
     */
    rewards: DecCoin[];
}
/**
 * QueryDelegationTotalRewardsRequest is the request type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest
 */
export interface QueryDelegationTotalRewardsRequest {
    /**
     * delegator_address defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
}
/**
 * QueryDelegationTotalRewardsResponse is the response type for the
 * Query/DelegationTotalRewards RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse
 */
export interface QueryDelegationTotalRewardsResponse {
    /**
     * rewards defines all the rewards accrued by a delegator.
     *
     * @generated from protobuf field: repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1;
     */
    rewards: DelegationDelegatorReward[];
    /**
     * total defines the sum of all the rewards.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.DecCoin total = 2;
     */
    total: DecCoin[];
}
/**
 * QueryDelegatorValidatorsRequest is the request type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest
 */
export interface QueryDelegatorValidatorsRequest {
    /**
     * delegator_address defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
}
/**
 * QueryDelegatorValidatorsResponse is the response type for the
 * Query/DelegatorValidators RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse
 */
export interface QueryDelegatorValidatorsResponse {
    /**
     * validators defines the validators a delegator is delegating for.
     *
     * @generated from protobuf field: repeated string validators = 1;
     */
    validators: string[];
}
/**
 * QueryDelegatorWithdrawAddressRequest is the request type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest
 */
export interface QueryDelegatorWithdrawAddressRequest {
    /**
     * delegator_address defines the delegator address to query for.
     *
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
}
/**
 * QueryDelegatorWithdrawAddressResponse is the response type for the
 * Query/DelegatorWithdrawAddress RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse
 */
export interface QueryDelegatorWithdrawAddressResponse {
    /**
     * withdraw_address defines the delegator address to query for.
     *
     * @generated from protobuf field: string withdraw_address = 1;
     */
    withdrawAddress: string;
}
/**
 * QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC
 * method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryCommunityPoolRequest
 */
export interface QueryCommunityPoolRequest {
}
/**
 * QueryCommunityPoolResponse is the response type for the Query/CommunityPool
 * RPC method.
 *
 * @generated from protobuf message cosmos.distribution.v1beta1.QueryCommunityPoolResponse
 */
export interface QueryCommunityPoolResponse {
    /**
     * pool defines community pool's coins.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.DecCoin pool = 1;
     */
    pool: DecCoin[];
}
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryParamsRequest", []);
    }
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryParamsRequest
 */
export const QueryParamsRequest = new QueryParamsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryParamsResponse", [
            { no: 1, name: "params", kind: "message", T: () => Params, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryParamsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.distribution.v1beta1.Params params */ 1:
                    message.params = Params.internalBinaryRead(reader, reader.uint32(), options, message.params);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.distribution.v1beta1.Params params = 1; */
        if (message.params)
            Params.internalBinaryWrite(message.params, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryParamsResponse
 */
export const QueryParamsResponse = new QueryParamsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorOutstandingRewardsRequest$Type extends MessageType<QueryValidatorOutstandingRewardsRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest", [
            { no: 1, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorOutstandingRewardsRequest>): QueryValidatorOutstandingRewardsRequest {
        const message = { validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorOutstandingRewardsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorOutstandingRewardsRequest): QueryValidatorOutstandingRewardsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_address */ 1:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorOutstandingRewardsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_address = 1; */
        if (message.validatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest
 */
export const QueryValidatorOutstandingRewardsRequest = new QueryValidatorOutstandingRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorOutstandingRewardsResponse$Type extends MessageType<QueryValidatorOutstandingRewardsResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse", [
            { no: 1, name: "rewards", kind: "message", T: () => ValidatorOutstandingRewards, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorOutstandingRewardsResponse>): QueryValidatorOutstandingRewardsResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorOutstandingRewardsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorOutstandingRewardsResponse): QueryValidatorOutstandingRewardsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards */ 1:
                    message.rewards = ValidatorOutstandingRewards.internalBinaryRead(reader, reader.uint32(), options, message.rewards);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorOutstandingRewardsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.distribution.v1beta1.ValidatorOutstandingRewards rewards = 1; */
        if (message.rewards)
            ValidatorOutstandingRewards.internalBinaryWrite(message.rewards, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse
 */
export const QueryValidatorOutstandingRewardsResponse = new QueryValidatorOutstandingRewardsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorCommissionRequest$Type extends MessageType<QueryValidatorCommissionRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorCommissionRequest", [
            { no: 1, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorCommissionRequest>): QueryValidatorCommissionRequest {
        const message = { validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorCommissionRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorCommissionRequest): QueryValidatorCommissionRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_address */ 1:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorCommissionRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_address = 1; */
        if (message.validatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorCommissionRequest
 */
export const QueryValidatorCommissionRequest = new QueryValidatorCommissionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorCommissionResponse$Type extends MessageType<QueryValidatorCommissionResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorCommissionResponse", [
            { no: 1, name: "commission", kind: "message", T: () => ValidatorAccumulatedCommission, options: { "gogoproto.nullable": false } }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorCommissionResponse>): QueryValidatorCommissionResponse {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorCommissionResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorCommissionResponse): QueryValidatorCommissionResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission */ 1:
                    message.commission = ValidatorAccumulatedCommission.internalBinaryRead(reader, reader.uint32(), options, message.commission);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorCommissionResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* cosmos.distribution.v1beta1.ValidatorAccumulatedCommission commission = 1; */
        if (message.commission)
            ValidatorAccumulatedCommission.internalBinaryWrite(message.commission, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorCommissionResponse
 */
export const QueryValidatorCommissionResponse = new QueryValidatorCommissionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorSlashesRequest$Type extends MessageType<QueryValidatorSlashesRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorSlashesRequest", [
            { no: 1, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "starting_height", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "ending_height", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "pagination", kind: "message", T: () => PageRequest }
        ], { "gogoproto.goproto_getters": false, "gogoproto.goproto_stringer": true });
    }
    create(value?: PartialMessage<QueryValidatorSlashesRequest>): QueryValidatorSlashesRequest {
        const message = { validatorAddress: "", startingHeight: "0", endingHeight: "0" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorSlashesRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorSlashesRequest): QueryValidatorSlashesRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string validator_address */ 1:
                    message.validatorAddress = reader.string();
                    break;
                case /* uint64 starting_height */ 2:
                    message.startingHeight = reader.uint64().toString();
                    break;
                case /* uint64 ending_height */ 3:
                    message.endingHeight = reader.uint64().toString();
                    break;
                case /* cosmos.base.query.v1beta1.PageRequest pagination */ 4:
                    message.pagination = PageRequest.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorSlashesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string validator_address = 1; */
        if (message.validatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.validatorAddress);
        /* uint64 starting_height = 2; */
        if (message.startingHeight !== "0")
            writer.tag(2, WireType.Varint).uint64(message.startingHeight);
        /* uint64 ending_height = 3; */
        if (message.endingHeight !== "0")
            writer.tag(3, WireType.Varint).uint64(message.endingHeight);
        /* cosmos.base.query.v1beta1.PageRequest pagination = 4; */
        if (message.pagination)
            PageRequest.internalBinaryWrite(message.pagination, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorSlashesRequest
 */
export const QueryValidatorSlashesRequest = new QueryValidatorSlashesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryValidatorSlashesResponse$Type extends MessageType<QueryValidatorSlashesResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryValidatorSlashesResponse", [
            { no: 1, name: "slashes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ValidatorSlashEvent, options: { "gogoproto.nullable": false } },
            { no: 2, name: "pagination", kind: "message", T: () => PageResponse }
        ]);
    }
    create(value?: PartialMessage<QueryValidatorSlashesResponse>): QueryValidatorSlashesResponse {
        const message = { slashes: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryValidatorSlashesResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryValidatorSlashesResponse): QueryValidatorSlashesResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes */ 1:
                    message.slashes.push(ValidatorSlashEvent.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.base.query.v1beta1.PageResponse pagination */ 2:
                    message.pagination = PageResponse.internalBinaryRead(reader, reader.uint32(), options, message.pagination);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryValidatorSlashesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.distribution.v1beta1.ValidatorSlashEvent slashes = 1; */
        for (let i = 0; i < message.slashes.length; i++)
            ValidatorSlashEvent.internalBinaryWrite(message.slashes[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.base.query.v1beta1.PageResponse pagination = 2; */
        if (message.pagination)
            PageResponse.internalBinaryWrite(message.pagination, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryValidatorSlashesResponse
 */
export const QueryValidatorSlashesResponse = new QueryValidatorSlashesResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationRewardsRequest$Type extends MessageType<QueryDelegationRewardsRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegationRewardsRequest", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "validator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegationRewardsRequest>): QueryDelegationRewardsRequest {
        const message = { delegatorAddress: "", validatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationRewardsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationRewardsRequest): QueryDelegationRewardsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                case /* string validator_address */ 2:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationRewardsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        /* string validator_address = 2; */
        if (message.validatorAddress !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.validatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegationRewardsRequest
 */
export const QueryDelegationRewardsRequest = new QueryDelegationRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationRewardsResponse$Type extends MessageType<QueryDelegationRewardsResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegationRewardsResponse", [
            { no: 1, name: "rewards", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DecCoin, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "github.com/cosmos/cosmos-sdk/types.DecCoins" } }
        ]);
    }
    create(value?: PartialMessage<QueryDelegationRewardsResponse>): QueryDelegationRewardsResponse {
        const message = { rewards: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationRewardsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationRewardsResponse): QueryDelegationRewardsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.base.v1beta1.DecCoin rewards */ 1:
                    message.rewards.push(DecCoin.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationRewardsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.base.v1beta1.DecCoin rewards = 1; */
        for (let i = 0; i < message.rewards.length; i++)
            DecCoin.internalBinaryWrite(message.rewards[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegationRewardsResponse
 */
export const QueryDelegationRewardsResponse = new QueryDelegationRewardsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationTotalRewardsRequest$Type extends MessageType<QueryDelegationTotalRewardsRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegationTotalRewardsRequest>): QueryDelegationTotalRewardsRequest {
        const message = { delegatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationTotalRewardsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationTotalRewardsRequest): QueryDelegationTotalRewardsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationTotalRewardsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest
 */
export const QueryDelegationTotalRewardsRequest = new QueryDelegationTotalRewardsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegationTotalRewardsResponse$Type extends MessageType<QueryDelegationTotalRewardsResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse", [
            { no: 1, name: "rewards", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DelegationDelegatorReward, options: { "gogoproto.nullable": false } },
            { no: 2, name: "total", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DecCoin, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "github.com/cosmos/cosmos-sdk/types.DecCoins" } }
        ]);
    }
    create(value?: PartialMessage<QueryDelegationTotalRewardsResponse>): QueryDelegationTotalRewardsResponse {
        const message = { rewards: [], total: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegationTotalRewardsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegationTotalRewardsResponse): QueryDelegationTotalRewardsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards */ 1:
                    message.rewards.push(DelegationDelegatorReward.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated cosmos.base.v1beta1.DecCoin total */ 2:
                    message.total.push(DecCoin.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegationTotalRewardsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.distribution.v1beta1.DelegationDelegatorReward rewards = 1; */
        for (let i = 0; i < message.rewards.length; i++)
            DelegationDelegatorReward.internalBinaryWrite(message.rewards[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated cosmos.base.v1beta1.DecCoin total = 2; */
        for (let i = 0; i < message.total.length; i++)
            DecCoin.internalBinaryWrite(message.total[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse
 */
export const QueryDelegationTotalRewardsResponse = new QueryDelegationTotalRewardsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorsRequest$Type extends MessageType<QueryDelegatorValidatorsRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorValidatorsRequest>): QueryDelegatorValidatorsRequest {
        const message = { delegatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorsRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorsRequest): QueryDelegatorValidatorsRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest
 */
export const QueryDelegatorValidatorsRequest = new QueryDelegatorValidatorsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorValidatorsResponse$Type extends MessageType<QueryDelegatorValidatorsResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse", [
            { no: 1, name: "validators", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorValidatorsResponse>): QueryDelegatorValidatorsResponse {
        const message = { validators: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorValidatorsResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorValidatorsResponse): QueryDelegatorValidatorsResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string validators */ 1:
                    message.validators.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorValidatorsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string validators = 1; */
        for (let i = 0; i < message.validators.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.validators[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse
 */
export const QueryDelegatorValidatorsResponse = new QueryDelegatorValidatorsResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorWithdrawAddressRequest$Type extends MessageType<QueryDelegatorWithdrawAddressRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest", [
            { no: 1, name: "delegator_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorWithdrawAddressRequest>): QueryDelegatorWithdrawAddressRequest {
        const message = { delegatorAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorWithdrawAddressRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorWithdrawAddressRequest): QueryDelegatorWithdrawAddressRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string delegator_address */ 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorWithdrawAddressRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string delegator_address = 1; */
        if (message.delegatorAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.delegatorAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest
 */
export const QueryDelegatorWithdrawAddressRequest = new QueryDelegatorWithdrawAddressRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryDelegatorWithdrawAddressResponse$Type extends MessageType<QueryDelegatorWithdrawAddressResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse", [
            { no: 1, name: "withdraw_address", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ], { "gogoproto.goproto_getters": false, "gogoproto.equal": false });
    }
    create(value?: PartialMessage<QueryDelegatorWithdrawAddressResponse>): QueryDelegatorWithdrawAddressResponse {
        const message = { withdrawAddress: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryDelegatorWithdrawAddressResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDelegatorWithdrawAddressResponse): QueryDelegatorWithdrawAddressResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string withdraw_address */ 1:
                    message.withdrawAddress = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryDelegatorWithdrawAddressResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string withdraw_address = 1; */
        if (message.withdrawAddress !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.withdrawAddress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse
 */
export const QueryDelegatorWithdrawAddressResponse = new QueryDelegatorWithdrawAddressResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryCommunityPoolRequest$Type extends MessageType<QueryCommunityPoolRequest> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryCommunityPoolRequest", []);
    }
    create(value?: PartialMessage<QueryCommunityPoolRequest>): QueryCommunityPoolRequest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryCommunityPoolRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCommunityPoolRequest): QueryCommunityPoolRequest {
        return target ?? this.create();
    }
    internalBinaryWrite(message: QueryCommunityPoolRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryCommunityPoolRequest
 */
export const QueryCommunityPoolRequest = new QueryCommunityPoolRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QueryCommunityPoolResponse$Type extends MessageType<QueryCommunityPoolResponse> {
    constructor() {
        super("cosmos.distribution.v1beta1.QueryCommunityPoolResponse", [
            { no: 1, name: "pool", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DecCoin, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "github.com/cosmos/cosmos-sdk/types.DecCoins" } }
        ]);
    }
    create(value?: PartialMessage<QueryCommunityPoolResponse>): QueryCommunityPoolResponse {
        const message = { pool: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryCommunityPoolResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCommunityPoolResponse): QueryCommunityPoolResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated cosmos.base.v1beta1.DecCoin pool */ 1:
                    message.pool.push(DecCoin.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryCommunityPoolResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated cosmos.base.v1beta1.DecCoin pool = 1; */
        for (let i = 0; i < message.pool.length; i++)
            DecCoin.internalBinaryWrite(message.pool[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.distribution.v1beta1.QueryCommunityPoolResponse
 */
export const QueryCommunityPoolResponse = new QueryCommunityPoolResponse$Type();
/**
 * @generated ServiceType for protobuf service cosmos.distribution.v1beta1.Query
 */
export const Query = new ServiceType("cosmos.distribution.v1beta1.Query", [
    { name: "Params", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/params" } }, I: QueryParamsRequest, O: QueryParamsResponse },
    { name: "ValidatorOutstandingRewards", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards" } }, I: QueryValidatorOutstandingRewardsRequest, O: QueryValidatorOutstandingRewardsResponse },
    { name: "ValidatorCommission", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/validators/{validator_address}/commission" } }, I: QueryValidatorCommissionRequest, O: QueryValidatorCommissionResponse },
    { name: "ValidatorSlashes", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes" } }, I: QueryValidatorSlashesRequest, O: QueryValidatorSlashesResponse },
    { name: "DelegationRewards", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}" } }, I: QueryDelegationRewardsRequest, O: QueryDelegationRewardsResponse },
    { name: "DelegationTotalRewards", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards" } }, I: QueryDelegationTotalRewardsRequest, O: QueryDelegationTotalRewardsResponse },
    { name: "DelegatorValidators", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators" } }, I: QueryDelegatorValidatorsRequest, O: QueryDelegatorValidatorsResponse },
    { name: "DelegatorWithdrawAddress", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address" } }, I: QueryDelegatorWithdrawAddressRequest, O: QueryDelegatorWithdrawAddressResponse },
    { name: "CommunityPool", options: { "google.api.http": { get: "/cosmos/distribution/v1beta1/community_pool" } }, I: QueryCommunityPoolRequest, O: QueryCommunityPoolResponse }
]);
