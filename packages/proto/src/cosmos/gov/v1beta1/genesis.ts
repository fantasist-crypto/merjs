// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/gov/v1beta1/genesis.proto" (package "cosmos.gov.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TallyParams } from "./gov";
import { VotingParams } from "./gov";
import { DepositParams } from "./gov";
import { Proposal } from "./gov";
import { Vote } from "./gov";
import { Deposit } from "./gov";
/**
 * GenesisState defines the gov module's genesis state.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.GenesisState
 */
export interface GenesisState {
    /**
     * starting_proposal_id is the ID of the starting proposal.
     *
     * @generated from protobuf field: uint64 starting_proposal_id = 1;
     */
    startingProposalId: string;
    /**
     * deposits defines all the deposits present at genesis.
     *
     * @generated from protobuf field: repeated cosmos.gov.v1beta1.Deposit deposits = 2;
     */
    deposits: Deposit[];
    /**
     * votes defines all the votes present at genesis.
     *
     * @generated from protobuf field: repeated cosmos.gov.v1beta1.Vote votes = 3;
     */
    votes: Vote[];
    /**
     * proposals defines all the proposals present at genesis.
     *
     * @generated from protobuf field: repeated cosmos.gov.v1beta1.Proposal proposals = 4;
     */
    proposals: Proposal[];
    /**
     * params defines all the paramaters of related to deposit.
     *
     * @generated from protobuf field: cosmos.gov.v1beta1.DepositParams deposit_params = 5;
     */
    depositParams?: DepositParams;
    /**
     * params defines all the paramaters of related to voting.
     *
     * @generated from protobuf field: cosmos.gov.v1beta1.VotingParams voting_params = 6;
     */
    votingParams?: VotingParams;
    /**
     * params defines all the paramaters of related to tally.
     *
     * @generated from protobuf field: cosmos.gov.v1beta1.TallyParams tally_params = 7;
     */
    tallyParams?: TallyParams;
}
// @generated message type with reflection information, may provide speed optimized methods
class GenesisState$Type extends MessageType<GenesisState> {
    constructor() {
        super("cosmos.gov.v1beta1.GenesisState", [
            { no: 1, name: "starting_proposal_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.moretags": "yaml:\"starting_proposal_id\"" } },
            { no: 2, name: "deposits", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Deposit, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "Deposits" } },
            { no: 3, name: "votes", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Vote, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "Votes" } },
            { no: 4, name: "proposals", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Proposal, options: { "gogoproto.nullable": false, "gogoproto.castrepeated": "Proposals" } },
            { no: 5, name: "deposit_params", kind: "message", T: () => DepositParams, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"deposit_params\"" } },
            { no: 6, name: "voting_params", kind: "message", T: () => VotingParams, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"voting_params\"" } },
            { no: 7, name: "tally_params", kind: "message", T: () => TallyParams, options: { "gogoproto.nullable": false, "gogoproto.moretags": "yaml:\"tally_params\"" } }
        ]);
    }
    create(value?: PartialMessage<GenesisState>): GenesisState {
        const message = { startingProposalId: "0", deposits: [], votes: [], proposals: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GenesisState>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenesisState): GenesisState {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 starting_proposal_id */ 1:
                    message.startingProposalId = reader.uint64().toString();
                    break;
                case /* repeated cosmos.gov.v1beta1.Deposit deposits */ 2:
                    message.deposits.push(Deposit.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated cosmos.gov.v1beta1.Vote votes */ 3:
                    message.votes.push(Vote.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated cosmos.gov.v1beta1.Proposal proposals */ 4:
                    message.proposals.push(Proposal.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* cosmos.gov.v1beta1.DepositParams deposit_params */ 5:
                    message.depositParams = DepositParams.internalBinaryRead(reader, reader.uint32(), options, message.depositParams);
                    break;
                case /* cosmos.gov.v1beta1.VotingParams voting_params */ 6:
                    message.votingParams = VotingParams.internalBinaryRead(reader, reader.uint32(), options, message.votingParams);
                    break;
                case /* cosmos.gov.v1beta1.TallyParams tally_params */ 7:
                    message.tallyParams = TallyParams.internalBinaryRead(reader, reader.uint32(), options, message.tallyParams);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GenesisState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 starting_proposal_id = 1; */
        if (message.startingProposalId !== "0")
            writer.tag(1, WireType.Varint).uint64(message.startingProposalId);
        /* repeated cosmos.gov.v1beta1.Deposit deposits = 2; */
        for (let i = 0; i < message.deposits.length; i++)
            Deposit.internalBinaryWrite(message.deposits[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated cosmos.gov.v1beta1.Vote votes = 3; */
        for (let i = 0; i < message.votes.length; i++)
            Vote.internalBinaryWrite(message.votes[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated cosmos.gov.v1beta1.Proposal proposals = 4; */
        for (let i = 0; i < message.proposals.length; i++)
            Proposal.internalBinaryWrite(message.proposals[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.gov.v1beta1.DepositParams deposit_params = 5; */
        if (message.depositParams)
            DepositParams.internalBinaryWrite(message.depositParams, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.gov.v1beta1.VotingParams voting_params = 6; */
        if (message.votingParams)
            VotingParams.internalBinaryWrite(message.votingParams, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* cosmos.gov.v1beta1.TallyParams tally_params = 7; */
        if (message.tallyParams)
            TallyParams.internalBinaryWrite(message.tallyParams, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.GenesisState
 */
export const GenesisState = new GenesisState$Type();
