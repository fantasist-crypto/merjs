// @generated by protobuf-ts 2.6.0 with parameter long_type_string
// @generated from protobuf file "cosmos/crypto/multisig/keys.proto" (package "cosmos.crypto.multisig", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
/**
 * LegacyAminoPubKey specifies a public key type
 * which nests multiple public keys and a threshold,
 * it uses legacy amino address rules.
 *
 * @generated from protobuf message cosmos.crypto.multisig.LegacyAminoPubKey
 */
export interface LegacyAminoPubKey {
    /**
     * @generated from protobuf field: uint32 threshold = 1;
     */
    threshold: number;
    /**
     * @generated from protobuf field: repeated google.protobuf.Any public_keys = 2;
     */
    publicKeys: Any[];
}
// @generated message type with reflection information, may provide speed optimized methods
class LegacyAminoPubKey$Type extends MessageType<LegacyAminoPubKey> {
    constructor() {
        super("cosmos.crypto.multisig.LegacyAminoPubKey", [
            { no: 1, name: "threshold", kind: "scalar", T: 13 /*ScalarType.UINT32*/, options: { "gogoproto.moretags": "yaml:\"threshold\"" } },
            { no: 2, name: "public_keys", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Any, options: { "gogoproto.customname": "PubKeys", "gogoproto.moretags": "yaml:\"pubkeys\"" } }
        ], { "gogoproto.goproto_getters": false });
    }
    create(value?: PartialMessage<LegacyAminoPubKey>): LegacyAminoPubKey {
        const message = { threshold: 0, publicKeys: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LegacyAminoPubKey>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LegacyAminoPubKey): LegacyAminoPubKey {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 threshold */ 1:
                    message.threshold = reader.uint32();
                    break;
                case /* repeated google.protobuf.Any public_keys */ 2:
                    message.publicKeys.push(Any.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LegacyAminoPubKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 threshold = 1; */
        if (message.threshold !== 0)
            writer.tag(1, WireType.Varint).uint32(message.threshold);
        /* repeated google.protobuf.Any public_keys = 2; */
        for (let i = 0; i < message.publicKeys.length; i++)
            Any.internalBinaryWrite(message.publicKeys[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.crypto.multisig.LegacyAminoPubKey
 */
export const LegacyAminoPubKey = new LegacyAminoPubKey$Type();
