syntax = "proto3";
package merlion.oracle.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/merlion-zone/merlion/x/oracle/types";

// Params defines the parameters for the oracle module.
message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  uint64 vote_period = 1 [ (gogoproto.moretags) = "yaml:\"vote_period\"" ];
  string vote_threshold = 2 [
    (gogoproto.moretags) = "yaml:\"vote_threshold\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string reward_band = 3 [
    (gogoproto.moretags) = "yaml:\"reward_band\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  uint64 reward_distribution_window = 4
      [ (gogoproto.moretags) = "yaml:\"reward_distribution_window\"" ];
  repeated Denom whitelist = 5 [
    (gogoproto.moretags) = "yaml:\"whitelist\"",
    (gogoproto.castrepeated) = "DenomList",
    (gogoproto.nullable) = false
  ];
  string slash_fraction = 6 [
    (gogoproto.moretags) = "yaml:\"slash_fraction\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  uint64 slash_window = 7 [ (gogoproto.moretags) = "yaml:\"slash_window\"" ];
  string min_valid_per_window = 8 [
    (gogoproto.moretags) = "yaml:\"min_valid_per_window\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// Denom represents an object to hold configurations of each denom
message Denom {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string name = 1 [ (gogoproto.moretags) = "yaml:\"name\"" ];
}

// AggregateExchangeRatePrevote represents the aggregate prevoting on the
// ExchangeRateVote. The purpose of aggregate prevoting is to hide vote exchange
// rates with hash which is formatted as hex string in SHA256("{salt}:{exchange
// rate}{denom},...,{exchange rate}{denom}:{voter}")
message AggregateExchangeRatePrevote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string hash = 1 [ (gogoproto.moretags) = "yaml:\"hash\"" ];
  string voter = 2 [ (gogoproto.moretags) = "yaml:\"voter\"" ];
  uint64 submit_block = 3 [ (gogoproto.moretags) = "yaml:\"submit_block\"" ];
}

// AggregateExchangeRateVote represents the voting on
// the exchange rates of various assets denominated in uUSD.
message AggregateExchangeRateVote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  repeated ExchangeRateTuple exchange_rate_tuples = 1 [
    (gogoproto.moretags) = "yaml:\"exchange_rate_tuples\"",
    (gogoproto.castrepeated) = "ExchangeRateTuples",
    (gogoproto.nullable) = false
  ];

  string voter = 2 [ (gogoproto.moretags) = "yaml:\"voter\"" ];
}

// ExchangeRateTuple stores interpreted exchange rates data.
message ExchangeRateTuple {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string denom = 1 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
  string exchange_rate = 2 [
    (gogoproto.moretags) = "yaml:\"exchange_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
