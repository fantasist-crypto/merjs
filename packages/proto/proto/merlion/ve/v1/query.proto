syntax = "proto3";
package merlion.ve.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "merlion/ve/v1/genesis.proto";

option go_package = "github.com/merlion-zone/merlion/x/ve/types";

// Query defines the ve gRPC querier service.
service Query {
  // TotalVotingPower queries the total voting power.
  rpc TotalVotingPower(QueryTotalVotingPowerRequest)
      returns (QueryTotalVotingPowerResponse) {
    option (google.api.http).get = "/merlion/ve/v1/total_voting_power";
  }

  // VotingPower queries the voting power of a veNFT.
  rpc VotingPower(QueryVotingPowerRequest) returns (QueryVotingPowerResponse) {
    option (google.api.http).get = "/merlion/ve/v1/voting_power/{ve_id}";
  }

  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/merlion/ve/v1/params";
  }
}

message QueryTotalVotingPowerRequest {
  uint64 at_time = 1;
  int64 at_block = 2;
}

message QueryTotalVotingPowerResponse {
  string power = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message QueryVotingPowerRequest {
  string ve_id = 1;
  uint64 at_time = 2;
  int64 at_block = 3;
}

message QueryVotingPowerResponse {
  string power = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}
